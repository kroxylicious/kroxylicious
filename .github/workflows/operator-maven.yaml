#
#  Licensed to the Apache Software Foundation (ASF) under one or more
#  contributor license agreements. See the NOTICE file distributed with
#  this work for additional information regarding copyright ownership.
#  The ASF licenses this file to You under the Apache License, Version 2.0
#  (the "License"); you may not use this file except in compliance with
#  the License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
name: Build Kroxylicious Operator

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build_operator:
    runs-on: ubuntu-latest

    steps:
      - name: 'Test for Sonar secret'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "SONAR_TOKEN_SET=$(test ${SONAR_TOKEN} && echo true)" >> $GITHUB_ENV
      - name: 'Check out repository'
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: 'Set up Java'
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.14.0
        with:
          "minikube version": 'v1.35.0'
          "kubernetes version": 'v1.32.0'
          "github token": ${{ secrets.GITHUB_TOKEN }}
          driver: docker
      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3
      - name: 'Configure build environment'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          GIT_HASH="$(git rev-parse HEAD)"
          IMAGE_TAG="dev-git-${GIT_HASH}"
          KROXYLICIOUS_VERSION="$(mvn org.apache.maven.plugins:maven-help-plugin:3.4.0:evaluate -Dexpression=project.version -q -DforceStdout)"
          KROXYLICIOUS_IMAGE="quay.io/kroxylicious/kroxylicious:${IMAGE_TAG}"
          echo "KROXYLICIOUS_VERSION=${KROXYLICIOUS_VERSION}" >> "$GITHUB_ENV"
          # KROXYLICIOUS_IMAGE env var is used by the Operator ITs
          echo "KROXYLICIOUS_IMAGE=${KROXYLICIOUS_IMAGE}" >> "$GITHUB_ENV"
      - name: 'Build tagged Kroxylicious Operand Docker image'
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          context: .
          build-args:
            KROXYLICIOUS_VERSION=${{ env.KROXYLICIOUS_VERSION }}
          tags: ${{ env.KROXYLICIOUS_IMAGE }}
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max,compression=zstd
          load: 'true'
      - name: 'Load Kroxylicious Operand Docker Image in Minikube'
        run: minikube image load  ${{ env.KROXYLICIOUS_IMAGE }}
      - name: 'Test for unpublished reference release (japicmp)'
        run: |
          REFERENCE_RELEASE=$(mvn --quiet -pl kroxylicious-api help:evaluate -Dexpression=ApiCompatability.ReferenceVersion -DforceStdout)
          echo "REFERENCE_RELEASE_UNPUBLISHED=$(mvn --quiet dependency:get -Dartifact=io.kroxylicious:kroxylicious-parent:${REFERENCE_RELEASE}:pom 1>/dev/null && echo false || echo true)" >> $GITHUB_ENV
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        if: github.ref_name == 'main' || env.SONAR_TOKEN_SET == 'true'
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: 'Cache Maven packages'
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: 'Build & test Kroxylicious operator'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn -B install -Pci -Djapicmp.skip=${REFERENCE_RELEASE_UNPUBLISHED} -pl ':kroxylicious-operator' -am
      - name: 'Build Kroxylicious maven project on main with Sonar'
        if: github.event_name == 'push' && github.ref_name == 'main' && env.SONAR_TOKEN_SET == 'true'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B verify -Pci -Djapicmp.skip=${REFERENCE_RELEASE_UNPUBLISHED} org.sonarsource.scanner.maven:sonar-maven-plugin:5.0.0.4389:sonar -Dsonar.projectKey=kroxylicious_kroxylicious  -pl ':kroxylicious-operator,:kroxylicious-parent'
      - name: Save PR number to file
        if: github.event_name == 'pull_request'
        run: echo ${{ github.event.number }} > PR_NUMBER.txt
      - name: Archive PR number
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: PR_NUMBER
          path: PR_NUMBER.txt

