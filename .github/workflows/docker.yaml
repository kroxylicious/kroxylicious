# docker.yaml - builds and pushes a kroxylicious container image.
#
# Requires repository variables:
# - REGISTRY_SERVER - the server of the container registry service e.g. `quay.io` or `docker.io`
# - REGISTRY_USERNAME - your username on the service (or username of your robot account)
# - REGISTRY_DESTINATION - the push destination (without tag portion) e.g. `quay.io/<my org>/kroxylicious`
# and a repository secret
# - REGISTRY_TOKEN - the access token that corresponds to `REGISTRY_USERNAME`
#
# If the required repository variables aren't set the workflow will be skipped. This means the workflow won't fail
# on the forks of developers who haven't configured the variables/secrets.

name: Docker Build

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    tags:
      - 'v*.*.*'
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Determine Build Configuration
        id: build_configuration
        run: |
          RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "release_version=${RELEASE_VERSION}" >> $GITHUB_OUTPUT

          if [[ "${{ github.event_name }}" == "pull_request" || "${{ vars.REGISTRY_SERVER }}" == "" ]]; then
            echo "proxy_tags=kroxylicious-proxy:${RELEASE_VERSION}" >> $GITHUB_OUTPUT
            echo "operator_tags=kroxylicious-operator:${RELEASE_VERSION}" >> $GITHUB_OUTPUT
            echo "push_images=false" >> $GITHUB_OUTPUT
          else
            PROXY_IMAGE="${{ vars.REGISTRY_SERVER }}/${{ vars.REGISTRY_ORGANISATION }}/${{ vars.PROXY_IMAGE_NAME }}"
            OPERATOR_IMAGE="${{ vars.REGISTRY_SERVER }}/${{ vars.REGISTRY_ORGANISATION }}/${{ vars.OPERATOR_IMAGE_NAME }}"
            echo "proxy_tags=${PROXY_IMAGE}:${RELEASE_VERSION}" >> $GITHUB_OUTPUT
            echo "operator_tags=${OPERATOR_IMAGE}:${RELEASE_VERSION},${OPERATOR_IMAGE}:latest" >> $GITHUB_OUTPUT
            echo "push_images=true" >> $GITHUB_OUTPUT
          fi

      - name: Login to container registry
        if: steps.build_configuration.outputs.push_images == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY_SERVER }}
          username: ${{ vars.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build and maybe push Proxy image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ steps.build_configuration.outputs.push_images == 'true' }}
          build-args: |
            KROXYLICIOUS_VERSION=${{ steps.build_configuration.outputs.release_version }}
          tags: ${{ steps.build_configuration.outputs.proxy_tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max,compression=zstd

      - name: Build and maybe push Operator image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.operator
          platforms: linux/amd64,linux/arm64
          push: ${{ steps.build_configuration.outputs.push_images == 'true' }}
          build-args: |
            KROXYLICIOUS_VERSION=${{ steps.build_configuration.outputs.release_version }}
          tags: ${{ steps.build_configuration.outputs.operator_tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max,compression=zstd